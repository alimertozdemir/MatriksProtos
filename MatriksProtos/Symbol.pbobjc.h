// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Symbol.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - SymbolRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface SymbolRoot : GPBRootObject
@end

#pragma mark - SymbolMessage

typedef GPB_ENUM(SymbolMessage_FieldNumber) {
  SymbolMessage_FieldNumber_SymbolId = 1,
  SymbolMessage_FieldNumber_SymbolCode = 2,
  SymbolMessage_FieldNumber_SymbolDesc = 3,
  SymbolMessage_FieldNumber_UpdateDate = 4,
  SymbolMessage_FieldNumber_Bid = 5,
  SymbolMessage_FieldNumber_Ask = 6,
  SymbolMessage_FieldNumber_Low = 7,
  SymbolMessage_FieldNumber_High = 8,
  SymbolMessage_FieldNumber_Last = 9,
  SymbolMessage_FieldNumber_DayClose = 10,
  SymbolMessage_FieldNumber_FractionCount = 11,
  SymbolMessage_FieldNumber_DailyLow = 12,
  SymbolMessage_FieldNumber_DailyHigh = 13,
  SymbolMessage_FieldNumber_Quantity = 14,
  SymbolMessage_FieldNumber_Volume = 15,
  SymbolMessage_FieldNumber_Difference = 16,
  SymbolMessage_FieldNumber_DifferencePercent = 17,
  SymbolMessage_FieldNumber_Days7DifPer = 18,
  SymbolMessage_FieldNumber_Days30DifPer = 19,
  SymbolMessage_FieldNumber_Week52DifPer = 20,
  SymbolMessage_FieldNumber_MonthHigh = 21,
  SymbolMessage_FieldNumber_MonthLow = 22,
  SymbolMessage_FieldNumber_YearHigh = 23,
  SymbolMessage_FieldNumber_YearLow = 24,
  SymbolMessage_FieldNumber_PriceMean = 25,
  SymbolMessage_FieldNumber_LimitUp = 26,
  SymbolMessage_FieldNumber_LimitDown = 27,
  SymbolMessage_FieldNumber_NetProceeds = 28,
  SymbolMessage_FieldNumber_PriceProceeds = 29,
  SymbolMessage_FieldNumber_MarketValue = 30,
  SymbolMessage_FieldNumber_MarketValueUsd = 31,
  SymbolMessage_FieldNumber_MarValBookVal = 32,
  SymbolMessage_FieldNumber_Equity = 33,
  SymbolMessage_FieldNumber_Capital = 34,
  SymbolMessage_FieldNumber_CirculationShare = 35,
  SymbolMessage_FieldNumber_CirculationSharePer = 36,
  SymbolMessage_FieldNumber_SymbolGroup = 37,
  SymbolMessage_FieldNumber_DailyVolume = 38,
  SymbolMessage_FieldNumber_SessionIsOpen = 39,
  SymbolMessage_FieldNumber_OpenForTrade = 40,
  SymbolMessage_FieldNumber_PriceStep = 41,
  SymbolMessage_FieldNumber_BasePrice = 42,
  SymbolMessage_FieldNumber_SymbolType = 43,
  SymbolMessage_FieldNumber_TradeFraction = 44,
  SymbolMessage_FieldNumber_StockSymbolCode = 45,
  SymbolMessage_FieldNumber_TradeDate = 46,
  SymbolMessage_FieldNumber_Open = 47,
  SymbolMessage_FieldNumber_DailyQuantity = 48,
  SymbolMessage_FieldNumber_ActionType = 49,
  SymbolMessage_FieldNumber_BrutSwap = 50,
  SymbolMessage_FieldNumber_TotalTradeCount = 51,
  SymbolMessage_FieldNumber_LastQuantity = 52,
  SymbolMessage_FieldNumber_WeekLow = 53,
  SymbolMessage_FieldNumber_WeekHigh = 54,
  SymbolMessage_FieldNumber_WeekClose = 55,
  SymbolMessage_FieldNumber_MonthClose = 56,
  SymbolMessage_FieldNumber_YearClose = 57,
  SymbolMessage_FieldNumber_Period = 58,
  SymbolMessage_FieldNumber_ShiftedNetProceed = 59,
  SymbolMessage_FieldNumber_AskSize = 60,
  SymbolMessage_FieldNumber_BidSize = 61,
  SymbolMessage_FieldNumber_EqPrice = 62,
  SymbolMessage_FieldNumber_EqQuantity = 63,
  SymbolMessage_FieldNumber_EqRemainingBidQuantity = 64,
  SymbolMessage_FieldNumber_EqRemainingAskQuantity = 65,
  SymbolMessage_FieldNumber_PrevYearClose = 66,
  SymbolMessage_FieldNumber_Direction = 67,
  SymbolMessage_FieldNumber_WeekPriceMean = 68,
  SymbolMessage_FieldNumber_MonthPriceMean = 69,
  SymbolMessage_FieldNumber_YearPriceMean = 70,
};

GPB_FINAL @interface SymbolMessage : GPBMessage

@property(nonatomic, readwrite) int32_t symbolId;

@property(nonatomic, readwrite) BOOL hasSymbolId;
/** sembol kodu */
@property(nonatomic, readwrite, copy, null_resettable) NSString *symbolCode;
/** Test to see if @c symbolCode has been set. */
@property(nonatomic, readwrite) BOOL hasSymbolCode;

/** sembol açıklaması */
@property(nonatomic, readwrite, copy, null_resettable) NSString *symbolDesc;
/** Test to see if @c symbolDesc has been set. */
@property(nonatomic, readwrite) BOOL hasSymbolDesc;

/** date format: yyyy-MM-ddTHH:mm:ssZ */
@property(nonatomic, readwrite, copy, null_resettable) NSString *updateDate;
/** Test to see if @c updateDate has been set. */
@property(nonatomic, readwrite) BOOL hasUpdateDate;

/** son alış fiyatı */
@property(nonatomic, readwrite) double bid;

@property(nonatomic, readwrite) BOOL hasBid;
/** son satış fiyatı */
@property(nonatomic, readwrite) double ask;

@property(nonatomic, readwrite) BOOL hasAsk;
/** seans içinde işlem gören en düşük fiyat */
@property(nonatomic, readwrite) double low;

@property(nonatomic, readwrite) BOOL hasLow;
/** seans içinde işlem gören en yüksek fiyat */
@property(nonatomic, readwrite) double high;

@property(nonatomic, readwrite) BOOL hasHigh;
/** son fiyat (islem fiyati) */
@property(nonatomic, readwrite) double last;

@property(nonatomic, readwrite) BOOL hasLast;
/** bir önceki günün kapanış fiyatı */
@property(nonatomic, readwrite) double dayClose;

@property(nonatomic, readwrite) BOOL hasDayClose;
/** fiyat için virgülden sonraki basamak sayısı. */
@property(nonatomic, readwrite) int32_t fractionCount;

@property(nonatomic, readwrite) BOOL hasFractionCount;
/** gun içinde işlem gören en düşük fiyat */
@property(nonatomic, readwrite) double dailyLow;

@property(nonatomic, readwrite) BOOL hasDailyLow;
/** gun içinde işlem gören en yüksek fiyat */
@property(nonatomic, readwrite) double dailyHigh;

@property(nonatomic, readwrite) BOOL hasDailyHigh;
/** işlem adedi */
@property(nonatomic, readwrite) double quantity;

@property(nonatomic, readwrite) BOOL hasQuantity;
/** işlem hacmi */
@property(nonatomic, readwrite) double volume;

@property(nonatomic, readwrite) BOOL hasVolume;
/** fark = işlem gören son fiyat - onceki gunun kapanis fiyati */
@property(nonatomic, readwrite) double difference;

@property(nonatomic, readwrite) BOOL hasDifference;
/** fark yuzdesi */
@property(nonatomic, readwrite) double differencePercent;

@property(nonatomic, readwrite) BOOL hasDifferencePercent;
/** 7 gunluk fark yuzdesi */
@property(nonatomic, readwrite) double days7DifPer;

@property(nonatomic, readwrite) BOOL hasDays7DifPer;
/** 30 gunluk fark yuzdesi */
@property(nonatomic, readwrite) double days30DifPer;

@property(nonatomic, readwrite) BOOL hasDays30DifPer;
/** 52 haftalik fark yuzdesi */
@property(nonatomic, readwrite) double week52DifPer;

@property(nonatomic, readwrite) BOOL hasWeek52DifPer;
/** ay icindeki en yuksek deger */
@property(nonatomic, readwrite) double monthHigh;

@property(nonatomic, readwrite) BOOL hasMonthHigh;
/** ay icindeki en dusuk deger */
@property(nonatomic, readwrite) double monthLow;

@property(nonatomic, readwrite) BOOL hasMonthLow;
/** yil icindeki en yuksek deger */
@property(nonatomic, readwrite) double yearHigh;

@property(nonatomic, readwrite) BOOL hasYearHigh;
/** yil icndeki en dusuk deger */
@property(nonatomic, readwrite) double yearLow;

@property(nonatomic, readwrite) BOOL hasYearLow;
/** gun icindeki agirlikli fiyat ortalamasi */
@property(nonatomic, readwrite) double priceMean;

@property(nonatomic, readwrite) BOOL hasPriceMean;
/** tavan fiyat */
@property(nonatomic, readwrite) double limitUp;

@property(nonatomic, readwrite) BOOL hasLimitUp;
/** taban fiyat */
@property(nonatomic, readwrite) double limitDown;

@property(nonatomic, readwrite) BOOL hasLimitDown;
/** Net Kar */
@property(nonatomic, readwrite) double netProceeds;

@property(nonatomic, readwrite) BOOL hasNetProceeds;
/** F/K (Fiyat/Kazanç) */
@property(nonatomic, readwrite) double priceProceeds;

@property(nonatomic, readwrite) BOOL hasPriceProceeds;
/** Piyasa Degeri */
@property(nonatomic, readwrite) double marketValue;

@property(nonatomic, readwrite) BOOL hasMarketValue;
/** Piyasa Degeri USD */
@property(nonatomic, readwrite) double marketValueUsd;

@property(nonatomic, readwrite) BOOL hasMarketValueUsd;
/** PD/DD (Piyasa Değeri/Defter Değeri) */
@property(nonatomic, readwrite) double marValBookVal;

@property(nonatomic, readwrite) BOOL hasMarValBookVal;
/** Özsermaye */
@property(nonatomic, readwrite) double equity;

@property(nonatomic, readwrite) BOOL hasEquity;
/** Sermaye */
@property(nonatomic, readwrite) double capital;

@property(nonatomic, readwrite) BOOL hasCapital;
/** Dolasimdaki Pay */
@property(nonatomic, readwrite) double circulationShare;

@property(nonatomic, readwrite) BOOL hasCirculationShare;
/** Dolasimdaki pay yuzdesi */
@property(nonatomic, readwrite) double circulationSharePer;

@property(nonatomic, readwrite) BOOL hasCirculationSharePer;
/** Sembol grubu A,B,C,D */
@property(nonatomic, readwrite, copy, null_resettable) NSString *symbolGroup;
/** Test to see if @c symbolGroup has been set. */
@property(nonatomic, readwrite) BOOL hasSymbolGroup;

/** Günlük işlem hacmi */
@property(nonatomic, readwrite) double dailyVolume;

@property(nonatomic, readwrite) BOOL hasDailyVolume;
/** true false */
@property(nonatomic, readwrite) BOOL sessionIsOpen;

@property(nonatomic, readwrite) BOOL hasSessionIsOpen;
/** true false */
@property(nonatomic, readwrite) BOOL openForTrade;

@property(nonatomic, readwrite) BOOL hasOpenForTrade;
/** fiyat adimi */
@property(nonatomic, readwrite) double priceStep;

@property(nonatomic, readwrite) BOOL hasPriceStep;
@property(nonatomic, readwrite) double basePrice;

@property(nonatomic, readwrite) BOOL hasBasePrice;
/** Symbol tipi */
@property(nonatomic, readwrite, copy, null_resettable) NSString *symbolType;
/** Test to see if @c symbolType has been set. */
@property(nonatomic, readwrite) BOOL hasSymbolType;

@property(nonatomic, readwrite) int32_t tradeFraction;

@property(nonatomic, readwrite) BOOL hasTradeFraction;
/** Sembolün borsa kodu */
@property(nonatomic, readwrite, copy, null_resettable) NSString *stockSymbolCode;
/** Test to see if @c stockSymbolCode has been set. */
@property(nonatomic, readwrite) BOOL hasStockSymbolCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *tradeDate;
/** Test to see if @c tradeDate has been set. */
@property(nonatomic, readwrite) BOOL hasTradeDate;

@property(nonatomic, readwrite) double open;

@property(nonatomic, readwrite) BOOL hasOpen;
/** Gün icing top lam lot (adet) */
@property(nonatomic, readwrite) double dailyQuantity;

@property(nonatomic, readwrite) BOOL hasDailyQuantity;
@property(nonatomic, readwrite, copy, null_resettable) NSString *actionType;
/** Test to see if @c actionType has been set. */
@property(nonatomic, readwrite) BOOL hasActionType;

@property(nonatomic, readwrite) int32_t brutSwap GPB_DEPRECATED_MSG("sample.SymbolMessage.brutSwap is deprecated (see Symbol.proto).");

@property(nonatomic, readwrite) BOOL hasBrutSwap GPB_DEPRECATED_MSG("sample.SymbolMessage.brutSwap is deprecated (see Symbol.proto).");
@property(nonatomic, readwrite) double totalTradeCount;

@property(nonatomic, readwrite) BOOL hasTotalTradeCount;
/** Son işlem adedi */
@property(nonatomic, readwrite) double lastQuantity;

@property(nonatomic, readwrite) BOOL hasLastQuantity;
/** Haftalık Düşük */
@property(nonatomic, readwrite) double weekLow;

@property(nonatomic, readwrite) BOOL hasWeekLow;
/** Haftalık yüksek */
@property(nonatomic, readwrite) double weekHigh;

@property(nonatomic, readwrite) BOOL hasWeekHigh;
/** Önceki hafta kapanış fiyatı */
@property(nonatomic, readwrite) double weekClose;

@property(nonatomic, readwrite) BOOL hasWeekClose;
/** Önceki ay kapanış fiyatı */
@property(nonatomic, readwrite) double monthClose;

@property(nonatomic, readwrite) BOOL hasMonthClose;
/** Önceki yıl kapanış fiyatı */
@property(nonatomic, readwrite) double yearClose;

@property(nonatomic, readwrite) BOOL hasYearClose;
@property(nonatomic, readwrite, copy, null_resettable) NSString *period;
/** Test to see if @c period has been set. */
@property(nonatomic, readwrite) BOOL hasPeriod;

@property(nonatomic, readwrite) double shiftedNetProceed;

@property(nonatomic, readwrite) BOOL hasShiftedNetProceed;
@property(nonatomic, readwrite) int64_t askSize;

@property(nonatomic, readwrite) BOOL hasAskSize;
@property(nonatomic, readwrite) int64_t bidSize;

@property(nonatomic, readwrite) BOOL hasBidSize;
/** Teorik eşleşme fiyatı */
@property(nonatomic, readwrite) double eqPrice;

@property(nonatomic, readwrite) BOOL hasEqPrice;
/** Teorik eşleşme adet */
@property(nonatomic, readwrite) double eqQuantity;

@property(nonatomic, readwrite) BOOL hasEqQuantity;
/** Teorik eşleşme kalan alış adedi */
@property(nonatomic, readwrite) double eqRemainingBidQuantity;

@property(nonatomic, readwrite) BOOL hasEqRemainingBidQuantity;
/** Teorik eşleşme kalan satış adedi */
@property(nonatomic, readwrite) double eqRemainingAskQuantity;

@property(nonatomic, readwrite) BOOL hasEqRemainingAskQuantity;
@property(nonatomic, readwrite) double prevYearClose;

@property(nonatomic, readwrite) BOOL hasPrevYearClose;
@property(nonatomic, readwrite) int32_t direction;

@property(nonatomic, readwrite) BOOL hasDirection;
@property(nonatomic, readwrite) double weekPriceMean;

@property(nonatomic, readwrite) BOOL hasWeekPriceMean;
@property(nonatomic, readwrite) double monthPriceMean;

@property(nonatomic, readwrite) BOOL hasMonthPriceMean;
@property(nonatomic, readwrite) double yearPriceMean;

@property(nonatomic, readwrite) BOOL hasYearPriceMean;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
