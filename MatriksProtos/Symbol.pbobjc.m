// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Symbol.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "Symbol.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - SymbolRoot

@implementation SymbolRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - SymbolRoot_FileDescriptor

static GPBFileDescriptor *SymbolRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"sample"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - SymbolMessage

@implementation SymbolMessage

@dynamic hasSymbolId, symbolId;
@dynamic hasSymbolCode, symbolCode;
@dynamic hasSymbolDesc, symbolDesc;
@dynamic hasUpdateDate, updateDate;
@dynamic hasBid, bid;
@dynamic hasAsk, ask;
@dynamic hasLow, low;
@dynamic hasHigh, high;
@dynamic hasLast, last;
@dynamic hasDayClose, dayClose;
@dynamic hasFractionCount, fractionCount;
@dynamic hasDailyLow, dailyLow;
@dynamic hasDailyHigh, dailyHigh;
@dynamic hasQuantity, quantity;
@dynamic hasVolume, volume;
@dynamic hasDifference, difference;
@dynamic hasDifferencePercent, differencePercent;
@dynamic hasDays7DifPer, days7DifPer;
@dynamic hasDays30DifPer, days30DifPer;
@dynamic hasWeek52DifPer, week52DifPer;
@dynamic hasMonthHigh, monthHigh;
@dynamic hasMonthLow, monthLow;
@dynamic hasYearHigh, yearHigh;
@dynamic hasYearLow, yearLow;
@dynamic hasPriceMean, priceMean;
@dynamic hasLimitUp, limitUp;
@dynamic hasLimitDown, limitDown;
@dynamic hasNetProceeds, netProceeds;
@dynamic hasPriceProceeds, priceProceeds;
@dynamic hasMarketValue, marketValue;
@dynamic hasMarketValueUsd, marketValueUsd;
@dynamic hasMarValBookVal, marValBookVal;
@dynamic hasEquity, equity;
@dynamic hasCapital, capital;
@dynamic hasCirculationShare, circulationShare;
@dynamic hasCirculationSharePer, circulationSharePer;
@dynamic hasSymbolGroup, symbolGroup;
@dynamic hasDailyVolume, dailyVolume;
@dynamic hasSessionIsOpen, sessionIsOpen;
@dynamic hasOpenForTrade, openForTrade;
@dynamic hasPriceStep, priceStep;
@dynamic hasBasePrice, basePrice;
@dynamic hasSymbolType, symbolType;
@dynamic hasTradeFraction, tradeFraction;
@dynamic hasStockSymbolCode, stockSymbolCode;
@dynamic hasTradeDate, tradeDate;
@dynamic hasOpen, open;
@dynamic hasDailyQuantity, dailyQuantity;
@dynamic hasActionType, actionType;
@dynamic hasBrutSwap, brutSwap;
@dynamic hasTotalTradeCount, totalTradeCount;
@dynamic hasLastQuantity, lastQuantity;
@dynamic hasWeekLow, weekLow;
@dynamic hasWeekHigh, weekHigh;
@dynamic hasWeekClose, weekClose;
@dynamic hasMonthClose, monthClose;
@dynamic hasYearClose, yearClose;
@dynamic hasPeriod, period;
@dynamic hasShiftedNetProceed, shiftedNetProceed;
@dynamic hasAskSize, askSize;
@dynamic hasBidSize, bidSize;
@dynamic hasEqPrice, eqPrice;
@dynamic hasEqQuantity, eqQuantity;
@dynamic hasEqRemainingBidQuantity, eqRemainingBidQuantity;
@dynamic hasEqRemainingAskQuantity, eqRemainingAskQuantity;
@dynamic hasPrevYearClose, prevYearClose;
@dynamic hasDirection, direction;
@dynamic hasWeekPriceMean, weekPriceMean;
@dynamic hasMonthPriceMean, monthPriceMean;
@dynamic hasYearPriceMean, yearPriceMean;

typedef struct SymbolMessage__storage_ {
  uint32_t _has_storage_[3];
  int32_t symbolId;
  int32_t fractionCount;
  int32_t tradeFraction;
  int32_t brutSwap;
  int32_t direction;
  NSString *symbolCode;
  NSString *symbolDesc;
  NSString *updateDate;
  NSString *symbolGroup;
  NSString *symbolType;
  NSString *stockSymbolCode;
  NSString *tradeDate;
  NSString *actionType;
  NSString *period;
  double bid;
  double ask;
  double low;
  double high;
  double last;
  double dayClose;
  double dailyLow;
  double dailyHigh;
  double quantity;
  double volume;
  double difference;
  double differencePercent;
  double days7DifPer;
  double days30DifPer;
  double week52DifPer;
  double monthHigh;
  double monthLow;
  double yearHigh;
  double yearLow;
  double priceMean;
  double limitUp;
  double limitDown;
  double netProceeds;
  double priceProceeds;
  double marketValue;
  double marketValueUsd;
  double marValBookVal;
  double equity;
  double capital;
  double circulationShare;
  double circulationSharePer;
  double dailyVolume;
  double priceStep;
  double basePrice;
  double open;
  double dailyQuantity;
  double totalTradeCount;
  double lastQuantity;
  double weekLow;
  double weekHigh;
  double weekClose;
  double monthClose;
  double yearClose;
  double shiftedNetProceed;
  int64_t askSize;
  int64_t bidSize;
  double eqPrice;
  double eqQuantity;
  double eqRemainingBidQuantity;
  double eqRemainingAskQuantity;
  double prevYearClose;
  double weekPriceMean;
  double monthPriceMean;
  double yearPriceMean;
} SymbolMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "symbolId",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_SymbolId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, symbolId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "symbolCode",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_SymbolCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, symbolCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "symbolDesc",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_SymbolDesc,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, symbolDesc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "updateDate",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_UpdateDate,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, updateDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bid",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Bid,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, bid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "ask",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Ask,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, ask),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "low",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Low,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, low),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "high",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_High,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, high),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "last",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Last,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, last),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "dayClose",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_DayClose,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, dayClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "fractionCount",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_FractionCount,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, fractionCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dailyLow",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_DailyLow,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, dailyLow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "dailyHigh",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_DailyHigh,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, dailyHigh),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "quantity",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Quantity,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, quantity),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "volume",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Volume,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, volume),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "difference",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Difference,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, difference),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "differencePercent",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_DifferencePercent,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, differencePercent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "days7DifPer",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Days7DifPer,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, days7DifPer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "days30DifPer",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Days30DifPer,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, days30DifPer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "week52DifPer",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Week52DifPer,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, week52DifPer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "monthHigh",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_MonthHigh,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, monthHigh),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "monthLow",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_MonthLow,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, monthLow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "yearHigh",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_YearHigh,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, yearHigh),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "yearLow",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_YearLow,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, yearLow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "priceMean",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_PriceMean,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, priceMean),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "limitUp",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_LimitUp,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, limitUp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "limitDown",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_LimitDown,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, limitDown),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "netProceeds",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_NetProceeds,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, netProceeds),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "priceProceeds",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_PriceProceeds,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, priceProceeds),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "marketValue",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_MarketValue,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, marketValue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "marketValueUsd",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_MarketValueUsd,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, marketValueUsd),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "marValBookVal",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_MarValBookVal,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, marValBookVal),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "equity",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Equity,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, equity),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "capital",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Capital,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, capital),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "circulationShare",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_CirculationShare,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, circulationShare),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "circulationSharePer",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_CirculationSharePer,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, circulationSharePer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "symbolGroup",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_SymbolGroup,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, symbolGroup),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "dailyVolume",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_DailyVolume,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, dailyVolume),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "sessionIsOpen",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_SessionIsOpen,
        .hasIndex = 38,
        .offset = 39,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "openForTrade",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_OpenForTrade,
        .hasIndex = 40,
        .offset = 41,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "priceStep",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_PriceStep,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, priceStep),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "basePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_BasePrice,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, basePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "symbolType",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_SymbolType,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, symbolType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tradeFraction",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_TradeFraction,
        .hasIndex = 45,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, tradeFraction),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "stockSymbolCode",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_StockSymbolCode,
        .hasIndex = 46,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, stockSymbolCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tradeDate",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_TradeDate,
        .hasIndex = 47,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, tradeDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "open",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Open,
        .hasIndex = 48,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, open),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "dailyQuantity",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_DailyQuantity,
        .hasIndex = 49,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, dailyQuantity),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "actionType",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_ActionType,
        .hasIndex = 50,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, actionType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "brutSwap",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_BrutSwap,
        .hasIndex = 51,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, brutSwap),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "totalTradeCount",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_TotalTradeCount,
        .hasIndex = 52,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, totalTradeCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "lastQuantity",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_LastQuantity,
        .hasIndex = 53,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, lastQuantity),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "weekLow",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_WeekLow,
        .hasIndex = 54,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, weekLow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "weekHigh",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_WeekHigh,
        .hasIndex = 55,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, weekHigh),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "weekClose",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_WeekClose,
        .hasIndex = 56,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, weekClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "monthClose",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_MonthClose,
        .hasIndex = 57,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, monthClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "yearClose",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_YearClose,
        .hasIndex = 58,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, yearClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "period",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Period,
        .hasIndex = 59,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, period),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shiftedNetProceed",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_ShiftedNetProceed,
        .hasIndex = 60,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, shiftedNetProceed),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "askSize",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_AskSize,
        .hasIndex = 61,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, askSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "bidSize",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_BidSize,
        .hasIndex = 62,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, bidSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "eqPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_EqPrice,
        .hasIndex = 63,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, eqPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "eqQuantity",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_EqQuantity,
        .hasIndex = 64,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, eqQuantity),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "eqRemainingBidQuantity",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_EqRemainingBidQuantity,
        .hasIndex = 65,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, eqRemainingBidQuantity),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "eqRemainingAskQuantity",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_EqRemainingAskQuantity,
        .hasIndex = 66,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, eqRemainingAskQuantity),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "prevYearClose",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_PrevYearClose,
        .hasIndex = 67,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, prevYearClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "direction",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_Direction,
        .hasIndex = 68,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, direction),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "weekPriceMean",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_WeekPriceMean,
        .hasIndex = 69,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, weekPriceMean),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "monthPriceMean",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_MonthPriceMean,
        .hasIndex = 70,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, monthPriceMean),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "yearPriceMean",
        .dataTypeSpecific.clazz = Nil,
        .number = SymbolMessage_FieldNumber_YearPriceMean,
        .hasIndex = 71,
        .offset = (uint32_t)offsetof(SymbolMessage__storage_, yearPriceMean),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SymbolMessage class]
                                     rootClass:[SymbolRoot class]
                                          file:SymbolRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SymbolMessage__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "9\001\010\000\002\n\000\003\n\000\004\n\000\n\010\000\013\r\000\014\010\000\r\t\000\021\021\000\022\013\000\023\014\000\024\014\000\025\t\000"
        "\026\010\000\027\010\000\030\007\000\031\t\000\032\007\000\033\t\000\034\013\000\035\r\000\036\013\000\037\016\000 \r\000#\020\000$\023\000%"
        "\013\000&\013\000\'\r\000(\014\000)\t\000*\t\000+\n\000,\r\000-\017\000.\t\0000\r\0001\n\0002\010\0003\017"
        "\0004\014\0005\007\0006\010\0007\t\0008\n\0009\t\000;\021\000<\007\000=\007\000>\007\000\?\n\000@\026\000A\026\000"
        "B\r\000D\r\000E\016\000F\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
